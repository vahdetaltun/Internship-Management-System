@model Stajtakip.Models.EntityFramework.StudentUserInfo
@{
    ViewBag.Title = "ForgatPassword";
    Layout = "~/Views/Shared/_RegisterPage.cshtml";
}
<html>
@{
    var endtime = DateTime.UtcNow.AddSeconds(5);
    var timeRemaining = TimeSpan.FromTicks(endtime.Ticks - DateTime.UtcNow.Ticks).TotalSeconds;
}
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="~/Scripts/login-min.js"></script>
    <link href="~/Content/login-min.css" rel="stylesheet" />
    <link href="~/Content/error-min.css" rel="stylesheet" />
    <link href="~/Content/SquareButton.css" rel="stylesheet" />
    @*<meta http-equiv="Refresh" content="10; URL=Login" />*@
</head>
<body class="body">
    @using (Html.BeginForm("ResetPassword", "Login", FormMethod.Post))
    {
        <div class="container">
            <div id="login-box" style="margin-left:19%;">
                <div class="logo">
                    <img src="~/Image/logo.png" class="img img-responsive img-circle center-block" style="width:60%;" />
                    <h1 class="logo-caption"><span class="tweak">R</span>eset</h1> <h1 class="logo-caption"><span class="tweak">P</span>assword</h1>
                </div><!-- /.logo -->

                <span class="row">
                    @*@Html.EditorFor(model => model.StudentEmail, new { htmlAttributes = new { @class = "form-control",placeholder = "Enter your mail address", @style = "font-size:10pt;" } })*@
                    <input type="text" class="form-control" placeholder="Email" name="Checkmail" style="font-size:10pt;" />
                </span>
                <span class="row">
                </span>


                <button type="submit" name="Register" value="Register" class="btn btn-default btn-block btn-custom paragraf wow rotateIn">Reset Password</button>
                <br />
                <div class="warning-msg" style="font-size:10pt;">
                    You will recieve an Confirmation code. Please check your email !
                </div>
                @Html.ActionLink("Login Page", "Login", null, new { @style = "color:#AC6868;text-decoration:none;font-size:13pt;" })
                
            @if (ViewBag.mustFillError == true)
                {
                    <div class="error-msg" style="font-size:10pt;">
                        <i class="fa fa-times-circle" aria-hidden="true"></i>
                        Please Write your Email Address !
                    </div>
                }
                @*@if ((string)Session["success"] == "true")
        {
            <div class="success-msg" style="font-size:15px;">
                <i class="fa fa-times-circle"></i>
                @Session["errorMessage"]
            </div>
            }*@

                @if (ViewBag.NotRegisteredError == true)
                {
                    <div class="error-msg" style="font-size:10pt;">
                        <i class="fa fa-times-circle" aria-hidden="true"></i>
                        You are not registered in the system !
                    </div>
                }
                @if (ViewBag.othermailtype == true)
                {
                    <div class="error-msg" style="font-size:10pt;">
                        <i class="fa fa-times-circle" aria-hidden="true"></i>
                        Please enter a valid mail address !
                        <p style="font-size:9pt;margin-top:1%;font-weight:bold;">example@hku.edu.tr OR example@std.hku.edu.tr </p>
                    </div>
                }
                <!-- /.controls -->
            </div><!-- /#login-box -->
        </div><!-- /.container -->


    }
</body>
</html>

<script>
        var remSeconds =@timeRemaining;
        var secondsCounter = remSeconds % 60;
        function formatNumber(number)
        {
            if (number < 10) return '' + number;
            else return '' + number;
        }
        function startTick() {
            document.getElementById("secRemaining").innerText = formatNumber(secondsCounter);



            var _tick = setInterval(function () {
                if (remSeconds > 0) {


                    remSeconds = remSeconds - 1;
                    secondsCounter = secondsCounter - 1;
                    document.getElementById('secRemaining').innerText = formatNumber(secondsCounter);

                }

            }, 1000);
        }
        startTick();
</script>